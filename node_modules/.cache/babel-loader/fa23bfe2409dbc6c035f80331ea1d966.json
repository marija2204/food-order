{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DT User\\\\Desktop\\\\ReactTutorial1\\\\food order\\\\01-starting-project\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n\n  const ModalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onCloseCart,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 26\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onCloseCart,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"TotalAmount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this), !isCheckout && ModalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Cart, \"h+sIjGF0PwOLirwEDh4q+RICsX0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/DT User/Desktop/ReactTutorial1/food order/01-starting-project/src/components/Cart/Cart.js"],"names":["useContext","useState","classes","Modal","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","cartItems","map","name","price","bind","ModalActions","actions","onCloseCart","button","total"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMU,OAAO,GAAGX,UAAU,CAACI,WAAD,CAA1B;AAEA,QAAMQ,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AACA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AAClCP,IAAAA,OAAO,CAACQ,UAAR,CAAmBD,EAAnB;AACH,GAFD;;AAIA,QAAME,kBAAkB,GAAIC,IAAD,IAAU;AACjCV,IAAAA,OAAO,CAACW,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAASE,MAAAA,MAAM,EAAC;AAAhB,KAAhB;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvBd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMe,SAAS,gBAAG;AAAI,IAAA,SAAS,EAAEvB,OAAO,CAAC,YAAD,CAAtB;AAAA,cACbS,OAAO,CAACI,KAAR,CAAcW,GAAd,CAAmBL,IAAD,iBAClB,QAAC,QAAD;AAEA,MAAA,IAAI,EAAEA,IAAI,CAACM,IAFX;AAGA,MAAA,MAAM,EAAEN,IAAI,CAACE,MAHb;AAIA,MAAA,KAAK,EAAEF,IAAI,CAACO,KAJZ;AAKA,MAAA,QAAQ,EAAEX,qBAAqB,CAACY,IAAtB,CAA2B,IAA3B,EAAgCR,IAAI,CAACH,EAArC,CALV;AAMA,MAAA,KAAK,EAAEE,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BR,IAA9B;AANP,OACKA,IAAI,CAACH,EADV;AAAA;AAAA;AAAA;AAAA,YADA;AADa;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAaA,QAAMY,YAAY,gBAAG;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,OAAxB;AAAA,4BACrB;AAAQ,MAAA,SAAS,EAAE7B,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEM,KAAK,CAACwB,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADqB,EAEpBlB,QAAQ,iBAAI;AAAQ,MAAA,SAAS,EAAEZ,OAAO,CAAC+B,MAA3B;AAAmC,MAAA,OAAO,EAAET,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAMD,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEhB,KAAK,CAACwB,WAAtB;AAAA,eACKP,SADL,eAEI;AAAK,MAAA,SAAS,EAAEvB,OAAO,CAACgC,KAAxB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOtB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMGH,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YANjB,EAOG,CAACA,UAAD,IAAeqB,YAPlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWF,CAjDD;;GAAMvB,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import { useContext, useState } from 'react';\r\nimport classes from './Cart.module.css';\r\nimport Modal from '../UI/Modal';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = (props) => {\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n\r\n    const cartCtx = useContext(CartContext);\r\n\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartCtx.items.length > 0;\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCtx.removeItem(id);\r\n    };\r\n    \r\n    const cartItemAddHandler = (item) => {\r\n        cartCtx.addItem({...item,amount:1});\r\n    };\r\n\r\n    const orderHandler = () => {\r\n        setIsCheckout(true);\r\n    };\r\n\r\n    const cartItems = <ul className={classes['cart-items']}>\r\n        {cartCtx.items.map((item) => (\r\n         <CartItem \r\n         key={item.id} \r\n         name={item.name} \r\n         amount={item.amount} \r\n         price={item.price} \r\n         onRemove={cartItemRemoveHandler.bind(null,item.id)}\r\n         onAdd={cartItemAddHandler.bind(null, item)}\r\n         />\r\n        ))}\r\n        </ul>;\r\n\r\n    const ModalActions = <div className={classes.actions}>\r\n    <button className={classes['button--alt']} onClick={props.onCloseCart}>Close</button>\r\n    {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\r\n    </div>;\r\n\r\n\r\n   return(\r\n       <Modal onClose={props.onCloseCart}>\r\n           {cartItems}\r\n           <div className={classes.total}>\r\n               <span>TotalAmount</span>\r\n               <span>{totalAmount}</span>\r\n           </div>\r\n         {isCheckout && <Checkout/>}\r\n         {!isCheckout && ModalActions}\r\n     </Modal>\r\n   );\r\n};\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}